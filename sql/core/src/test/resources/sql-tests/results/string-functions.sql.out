-- Automatically generated by SQLQueryTestSuite
-- Number of queries: 7


-- !query 0
select concat_ws()
-- !query 0 schema
struct<>
-- !query 0 output
org.apache.spark.sql.AnalysisException
requirement failed: concat_ws requires at least one argument.; line 1 pos 7


-- !query 1
select format_string()
-- !query 1 schema
struct<>
-- !query 1 output
org.apache.spark.sql.AnalysisException
requirement failed: format_string() should take at least 1 argument; line 1 pos 7


-- !query 2
select 'a' || 'b' || 'c'
-- !query 2 schema
struct<concat(concat(a, b), c):string>
-- !query 2 output
abc


-- !query 3
EXPLAIN EXTENDED SELECT (col1 || col2 || col3 || col4) col
FROM (SELECT id col1, id col2, id col3, id col4 FROM range(10)) t
-- !query 3 schema
struct<plan:string>
-- !query 3 output
== Parsed Logical Plan ==
'Project [concat(concat(concat('col1, 'col2), 'col3), 'col4) AS col#x]
+- 'SubqueryAlias t
   +- 'Project ['id AS col1#x, 'id AS col2#x, 'id AS col3#x, 'id AS col4#x]
      +- 'UnresolvedTableValuedFunction range, [10]

== Analyzed Logical Plan ==
col: string
Project [concat(concat(concat(cast(col1#xL as string), cast(col2#xL as string)), cast(col3#xL as string)), cast(col4#xL as string)) AS col#x]
+- SubqueryAlias t
   +- Project [id#xL AS col1#xL, id#xL AS col2#xL, id#xL AS col3#xL, id#xL AS col4#xL]
      +- Range (0, 10, step=1, splits=None)

== Optimized Logical Plan ==
Project [concat(cast(id#xL as string), cast(id#xL as string), cast(id#xL as string), cast(id#xL as string)) AS col#x]
+- Range (0, 10, step=1, splits=None)

== Physical Plan ==
*Project [concat(cast(id#xL as string), cast(id#xL as string), cast(id#xL as string), cast(id#xL as string)) AS col#x]
+- *Range (0, 10, step=1, splits=2)


-- !query 4
select replace('abc', 'b', '123')
-- !query 4 schema
struct<replace(abc, b, 123):string>
-- !query 4 output
a123c


-- !query 5
select replace('abc', 'b')
-- !query 5 schema
struct<replace(abc, b, ):string>
-- !query 5 output
ac


-- !query 6
select length(uuid()), (uuid() <> uuid())
-- !query 6 schema
struct<length(uuid()):int,(NOT (uuid() = uuid())):boolean>
-- !query 6 output
36	true
